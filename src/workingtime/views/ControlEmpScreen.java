/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package workingtime.views;

import java.awt.Color;
import java.awt.Font;
import java.awt.HeadlessException;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.security.SecureRandom;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.concurrent.ThreadLocalRandom;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import workingtime.database.Conexion;
import workingtime.model.ResetFields;
import workingtime.model.ValidateData;

/**
 *
 * @author Lidia Parral
 */
public final class ControlEmpScreen extends javax.swing.JFrame {

    public ResetFields reset = new ResetFields();
    public ValidateData valid = new ValidateData();

    Conexion conn = new Conexion();
    Connection conect;

    DefaultTableModel modelo;

    PreparedStatement ps;
    Statement st;

    ResultSet rs;

    String sql;
    String name;
    String surnames;
    String job;
    String phone;
    String email;
    String dateOfBirth;
    String SSNumber;
    String user;
    String password;
    String dni;
    String department;
    String country;
    String capital;
    String dateOfSeniority;
    String groupProf;
    String groupCot;

    /**
     * Creates new form ControlEmpScreen
     */
    public ControlEmpScreen() {
        initComponents();
        getCountry();
        getDepartment();
        this.setLocationRelativeTo(null);
        this.getContentPane().setBackground(Color.WHITE);
        cmbEmpJob.setEnabled(false);
        lblName.setFont(new Font("Century Gothic", Font.BOLD, 14));
        lblSurnames.setFont(new Font("Century Gothic", Font.BOLD, 14));
        lblDNI.setFont(new Font("Century Gothic", Font.BOLD, 14));
        lblDateBirth.setFont(new Font("Century Gothic", Font.BOLD, 14));
        lblNumSS.setFont(new Font("Century Gothic", Font.BOLD, 14));
        lblDateOld.setFont(new Font("Century Gothic", Font.BOLD, 14));
        lblJob.setFont(new Font("Century Gothic", Font.BOLD, 14));
        lblDpto.setFont(new Font("Century Gothic", Font.BOLD, 14));
        lblEmail.setFont(new Font("Century Gothic", Font.BOLD, 14));
        lblPhone.setFont(new Font("Century Gothic", Font.BOLD, 14));
        lblCapital.setFont(new Font("Century Gothic", Font.BOLD, 14));
        lblCountry.setFont(new Font("Century Gothic", Font.BOLD, 14));
        lblGroupCot.setFont(new Font("Century Gothic", Font.BOLD, 14));
        lblGroupPro.setFont(new Font("Century Gothic", Font.BOLD, 14));
        btnSaveEmp.setFont(new Font("Century Gothic", Font.BOLD, 12));
        btnReturn.setFont(new Font("Century Gothic", Font.PLAIN, 12));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblName = new javax.swing.JLabel();
        lblSurnames = new javax.swing.JLabel();
        lblDNI = new javax.swing.JLabel();
        lblNumSS = new javax.swing.JLabel();
        lblJob = new javax.swing.JLabel();
        lblEmail = new javax.swing.JLabel();
        lblDateBirth = new javax.swing.JLabel();
        lblCapital = new javax.swing.JLabel();
        lblCountry = new javax.swing.JLabel();
        lblGroupPro = new javax.swing.JLabel();
        lblDateOld = new javax.swing.JLabel();
        lblGroupCot = new javax.swing.JLabel();
        txtNameEmp = new javax.swing.JTextField();
        txtSurnamesEmp = new javax.swing.JTextField();
        txtDNIEmp = new javax.swing.JTextField();
        txtSSNumEmp = new javax.swing.JTextField();
        cmbEmpDepartment = new javax.swing.JComboBox<>();
        lblDpto = new javax.swing.JLabel();
        txtEmailEmp = new javax.swing.JTextField();
        dtDateOfBirthEmp = new com.toedter.calendar.JDateChooser();
        dtDateOfSeniorityEmp = new com.toedter.calendar.JDateChooser();
        txtCapitalEmp = new javax.swing.JTextField();
        cmbEmpCountry = new javax.swing.JComboBox<>();
        txtGroupCotEmp = new javax.swing.JTextField();
        lblPhone = new javax.swing.JLabel();
        txtPhoneEmp = new javax.swing.JTextField();
        cmbEmpJob = new javax.swing.JComboBox<>();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        cmbGroupProf = new javax.swing.JComboBox<>();
        jPanel3 = new javax.swing.JPanel();
        btnSaveEmp = new javax.swing.JButton();
        btnReturn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setIconImage(getIconImage());
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        lblName.setText("Nombre:");

        lblSurnames.setText("Apellidos:");

        lblDNI.setText("DNI:");

        lblNumSS.setText("Número Seguridad Social:");

        lblJob.setText("Puesto de Trabajo:");

        lblEmail.setText("Email:");

        lblDateBirth.setText("Fecha de Nacimiento:");

        lblCapital.setText("Capital");

        lblCountry.setText("País:");

        lblGroupPro.setText("Grupo Profesional:");

        lblDateOld.setText("Fecha de Antigüedad:");

        lblGroupCot.setText("Grupo de Cotización:");

        txtNameEmp.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N

        txtSurnamesEmp.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N

        txtDNIEmp.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N

        txtSSNumEmp.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N

        cmbEmpDepartment.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        cmbEmpDepartment.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbEmpDepartmentItemStateChanged(evt);
            }
        });

        lblDpto.setText("Departamento:");

        txtEmailEmp.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        txtEmailEmp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailEmpActionPerformed(evt);
            }
        });

        dtDateOfBirthEmp.setBackground(new java.awt.Color(255, 255, 255));
        dtDateOfBirthEmp.setDateFormatString("dd-MM-yyyy");
        dtDateOfBirthEmp.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        dtDateOfBirthEmp.setMaxSelectableDate(new Date());

        dtDateOfSeniorityEmp.setBackground(new java.awt.Color(255, 255, 255));
        dtDateOfSeniorityEmp.setDateFormatString("dd-MM-yyyy");
        dtDateOfSeniorityEmp.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        dtDateOfSeniorityEmp.setMaxSelectableDate(new Date());

        txtCapitalEmp.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        txtCapitalEmp.setEnabled(false);

        cmbEmpCountry.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        cmbEmpCountry.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbEmpCountryItemStateChanged(evt);
            }
        });

        txtGroupCotEmp.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        txtGroupCotEmp.setEnabled(false);
        txtGroupCotEmp.setFocusable(false);

        lblPhone.setText("Teléfono:");

        txtPhoneEmp.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N

        cmbEmpJob.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N

        jLabel15.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        jLabel15.setText("@workingtime.com");

        jLabel16.setBackground(new java.awt.Color(255, 255, 255));
        jLabel16.setIcon(new javax.swing.ImageIcon("C:\\Users\\parra\\Downloads\\workingtime_img.png")); // NOI18N

        jLabel17.setBackground(new java.awt.Color(255, 255, 255));
        jLabel17.setIcon(new javax.swing.ImageIcon("C:\\Users\\parra\\Downloads\\workingtime_home - copia.png")); // NOI18N

        cmbGroupProf.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        cmbGroupProf.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "INGENIEROS Y LICENCIADOS", "INGENIEROS TÉCNICOS, PERITOS Y AYUDANTES TITULADOS", "JEFES ADMINISTRATIVOS Y DE TALLER", "AYUDANTES NO TITULADOS", "OFICIALES ADMINISTRATIVOS", "SUBALTERNOS", "AUXILIARES ADMINISTRATIVOS", "OFICIALES DE PRIMERA Y SEGUNDA", "OFICIALES DE TERCERA Y ESPECIALISTAS", "PEONES", " " }));
        cmbGroupProf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbGroupProfActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblEmail)
                    .addComponent(txtSSNumEmp, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblJob)
                    .addComponent(lblGroupPro)
                    .addComponent(txtDNIEmp, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbEmpJob, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(lblNumSS)
                        .addComponent(lblName, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(lblSurnames, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(lblDNI, javax.swing.GroupLayout.Alignment.LEADING))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtEmailEmp, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel15))
                    .addComponent(lblCapital)
                    .addComponent(cmbGroupProf, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCapitalEmp, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNameEmp, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSurnamesEmp))
                .addGap(58, 58, 58)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 5, Short.MAX_VALUE)
                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblCountry)
                            .addComponent(lblGroupCot)
                            .addComponent(lblDpto)
                            .addComponent(lblPhone)
                            .addComponent(cmbEmpDepartment, 0, 196, Short.MAX_VALUE)
                            .addComponent(lblDateBirth)
                            .addComponent(txtGroupCotEmp, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPhoneEmp))
                        .addGap(0, 100, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbEmpCountry, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDateOld)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(dtDateOfSeniorityEmp, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE)
                                .addComponent(dtDateOfBirthEmp, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(lblName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNameEmp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblSurnames))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(12, 12, 12)
                .addComponent(txtSurnamesEmp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDNI)
                    .addComponent(lblDateBirth))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtDNIEmp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dtDateOfBirthEmp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblNumSS)
                    .addComponent(lblDateOld))
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtSSNumEmp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblJob)
                            .addComponent(lblDpto))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmbEmpJob, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbEmpDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblEmail)
                            .addComponent(lblPhone))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtEmailEmp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15)
                            .addComponent(txtPhoneEmp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCapital)
                            .addComponent(lblCountry))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCapitalEmp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbEmpCountry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(dtDateOfSeniorityEmp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(lblGroupPro)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbGroupProf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                        .addComponent(lblGroupCot)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtGroupCotEmp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(60, 60, 60))))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        btnSaveEmp.setBackground(new java.awt.Color(38, 70, 166));
        btnSaveEmp.setForeground(new java.awt.Color(255, 255, 255));
        btnSaveEmp.setText("GUARDAR");
        btnSaveEmp.setToolTipText("Este botón permite guardar los datos del empleado.");
        btnSaveEmp.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnSaveEmp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveEmpActionPerformed(evt);
            }
        });

        btnReturn.setBackground(new java.awt.Color(204, 204, 204));
        btnReturn.setForeground(new java.awt.Color(255, 255, 255));
        btnReturn.setText("CANCELAR");
        btnReturn.setToolTipText("Este botón permite volver a la página anterior.");
        btnReturn.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnReturn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReturnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSaveEmp, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(btnReturn, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSaveEmp, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnReturn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveEmpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveEmpActionPerformed
        btnSaveEmp.setBackground(new Color(252, 201, 131));
        addEmployee();
        btnSaveEmp.setBackground(new Color(38, 70, 166));
    }//GEN-LAST:event_btnSaveEmpActionPerformed

    private void cmbEmpDepartmentItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbEmpDepartmentItemStateChanged
        if (cmbEmpDepartment.getSelectedIndex() > 0) {
            cmbEmpJob.setEnabled(true);
            cmbEmpJob.removeAllItems();
            getEmpJob();
        }
    }//GEN-LAST:event_cmbEmpDepartmentItemStateChanged

    private void cmbEmpCountryItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbEmpCountryItemStateChanged
        if (cmbEmpCountry.getSelectedIndex() > 0) {
            txtCapitalEmp.setText("");
            getEmpCountry();
        }
    }//GEN-LAST:event_cmbEmpCountryItemStateChanged

    private void btnReturnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReturnActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnReturnActionPerformed

    private void cmbGroupProfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbGroupProfActionPerformed
        groupProfesional();
    }//GEN-LAST:event_cmbGroupProfActionPerformed

    private void txtEmailEmpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailEmpActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmailEmpActionPerformed

    public void addEmployee() {
        name = txtNameEmp.getText().toUpperCase();
        surnames = txtSurnamesEmp.getText().toUpperCase();
        dni = txtDNIEmp.getText();
        SSNumber = txtSSNumEmp.getText();
        dateOfBirth = new SimpleDateFormat("dd-MM-yyyy").format(dtDateOfBirthEmp.getDate());
        dateOfSeniority = new SimpleDateFormat("dd-MM-yyyy").format(dtDateOfSeniorityEmp.getDate());
        email = txtEmailEmp.getText().concat("@workingtime.com");
        phone = txtPhoneEmp.getText();
        user = txtEmailEmp.getText();
        password = generateRandomPassword(12, 48, 122);
        groupProf = cmbGroupProf.getSelectedItem().toString().toUpperCase();
        groupCot = txtGroupCotEmp.getText();
        department = cmbEmpDepartment.getSelectedItem().toString().toUpperCase();
        country = cmbEmpCountry.getSelectedItem().toString().toUpperCase();
        job = cmbEmpJob.getSelectedItem().toString().toUpperCase();
        capital = txtCapitalEmp.getText().toUpperCase();
        
        
        if (name.equals("") || surnames.equals("") || email.equals("") || phone.equals("") || groupProf.equals("") || groupCot.equals("")
                || dateOfSeniority.equals("") || dateOfBirth.equals("") || phone.equals("") || user.equals("") || dni.equals("")) {
            JOptionPane.showMessageDialog(null, "Los campos no pueden estar vacíos.", "VALIDACIÓN DE CAMPOS", JOptionPane.ERROR_MESSAGE);
        } else if (!valid.validateNumNine(dni)) {
            JOptionPane.showMessageDialog(null, "El campo del DNI debe contener 8 números y 1 caracter.", "VALIDACIÓN DE CAMPOS", JOptionPane.ERROR_MESSAGE);
        } else if (!valid.validateNumTwelve(SSNumber)) {
            JOptionPane.showMessageDialog(null, "El campo del número de la seguridad social debe contener 12 números.", "VALIDACIÓN DE CAMPOS", JOptionPane.ERROR_MESSAGE);
        } else if (!valid.validateNumNine(phone)) {
            JOptionPane.showMessageDialog(null, "El campo del número de teléfono debe contener 9 números.", "VALIDACIÓN DE CAMPOS", JOptionPane.ERROR_MESSAGE);
        } else {
            try {

                sql = "INSERT INTO empleados(Nombre,Apellidos,DNI,Usuario,Password,FechaNac,Departamento,PuestoTrabajo,Ciudad,Pais,Email,Telefono,NumeroSeguridadSocial,GrupoProfesional,GrupoCotizacion,FechaAntiguedad) VALUES "
                        + "('" + name + "','" + surnames + "','" + dni + "','" + user + "','" + password + "',STR_TO_DATE('" + dateOfBirth + "','%d-%m-%Y'),'" + department + "','"
                        + job + "','" + capital + "','" + country + "','" + email + "','" + phone + "','" + SSNumber + "','" + groupProf
                        + "','" + groupCot + "',STR_TO_DATE('" + dateOfSeniority + "','%d-%m-%Y'))";

                conect = conn.getConexion();
                st = conect.createStatement();
                st.executeUpdate(sql);
                JOptionPane.showMessageDialog(null, "Recuerde las credenciales.\nRegistro con éxito\nUsuario: " + user + "\nPassword: " + password, "Registro del empleado", JOptionPane.PLAIN_MESSAGE);
                saveCredentials();

            } catch (HeadlessException | SQLException ex) {
                System.err.println("Error:" + ex);
            }
        }
        cleanData();
    }

    public void cleanData() {
        reset.ResetPanel(jPanel1);
        cmbEmpCountry.setSelectedIndex(0);
        cmbEmpDepartment.setSelectedIndex(0);
        cmbEmpJob.setSelectedIndex(0);
    }

    public void saveCredentials() {
        File file = new File("C:\\Credentials.txt");
        if (!file.exists()) {
            try {
                file.createNewFile();
            } catch (IOException ex) {
                Logger.getLogger(ControlEmpScreen.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            try {
                file.delete();
                file.createNewFile();
            } catch (IOException ex) {
                Logger.getLogger(ControlEmpScreen.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        try {
            try ( FileWriter fw = new FileWriter(file, true)) {
                fw.flush();
                fw.write("Username: ");
                fw.write(user);
                fw.write("\n");
                fw.write("Password: ");
                fw.write(password);
                fw.close();
            }
        } catch (IOException ex) {
            Logger.getLogger(ControlEmpScreen.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void getEmpJob() {
        department = cmbEmpDepartment.getSelectedItem().toString();
        try {
            sql = "SELECT PuestoTrabajo FROM departamentos WHERE Departamento='" + department + "'";

            conect = conn.getConexion();
            ps = conect.prepareStatement(sql);
            rs = ps.executeQuery(sql);

            while (rs.next()) {
                cmbEmpJob.addItem(rs.getString("PuestoTrabajo").toUpperCase());
            }
        } catch (HeadlessException | SQLException ex) {
            System.err.println("Error:" + ex);
        }
    }

    private void getDepartment() {
        try {
            sql = "SELECT DISTINCT Departamento FROM departamentos";

            conect = conn.getConexion();
            ps = conect.prepareStatement(sql);
            rs = ps.executeQuery(sql);

            while (rs.next()) {
                cmbEmpDepartment.addItem(rs.getString("Departamento").toUpperCase());

            }
        } catch (HeadlessException | SQLException ex) {
            System.err.println("Error:" + ex);
        }
    }

    public void getEmpCountry() {
        try {
            country = cmbEmpCountry.getSelectedItem().toString();
            sql = "SELECT Capital FROM paises WHERE Pais ='" + country + "'";

            conect = conn.getConexion();
            ps = conect.prepareStatement(sql);
            rs = ps.executeQuery(sql);

            if (rs.next()) {
                txtCapitalEmp.setText(rs.getString("Capital").toUpperCase());
            }
        } catch (HeadlessException | SQLException ex) {
            System.err.println("Error:" + ex);
        }
    }

    public void getCountry() {

        try {
            sql = "SELECT * FROM paises";

            conect = conn.getConexion();
            ps = conect.prepareStatement(sql);
            rs = ps.executeQuery(sql);

            while (rs.next()) {
                cmbEmpCountry.addItem(rs.getString("Pais").toUpperCase());

            }
        } catch (HeadlessException | SQLException ex) {
            System.err.println("Error:" + ex);
        }
    }

    public static String generateRandomPassword(int len, int randNumOrigin, int randNumBound) {
        SecureRandom random = new SecureRandom();
        return random.ints(randNumOrigin, randNumBound + 1)
                .filter(i -> Character.isAlphabetic(i) || Character.isDigit(i))
                .limit(len)
                .collect(StringBuilder::new, StringBuilder::appendCodePoint,
                        StringBuilder::append)
                .toString();
    }

    public static int randomNumberInRange(int minimo, int maximo) {
        return ThreadLocalRandom.current().nextInt(minimo, maximo + 1);

    }

    public String randomString(int longitud) {
        String username = name + surnames;
        String cadena = "";
        for (int x = 0; x < longitud; x++) {
            int indiceAleatorio = randomNumberInRange(0, username.length() - 1);
            char caracterAleatorio = username.charAt(indiceAleatorio);
            cadena += caracterAleatorio;
        }
        return cadena;
    }

    void groupProfesional() {
        switch (cmbGroupProf.getSelectedIndex()) {
            case 0:
                groupProf = "INGENIEROS Y LICENCIADOS";
                txtGroupCotEmp.setText("1");
                break;
            case 1:
                groupProf = "INGENIEROS TÉCNICOS, PERITOS Y AYUDANTES TITULADOS";
                txtGroupCotEmp.setText("2");
                break;
            case 2:
                groupProf = "JEFES ADMINISTRATIVOS Y DE TALLER";
                txtGroupCotEmp.setText("3");
                break;
            case 3:
                groupProf = "AYUDANTES NO TITULADOS";
                txtGroupCotEmp.setText("4");
                break;
            case 4:
                groupProf = "OFICIALES ADMINISTRATIVOS";
                txtGroupCotEmp.setText("5");
                break;
            case 5:
                groupProf = "SUBALTERNOS";
                txtGroupCotEmp.setText("6");
                break;
            case 6:
                groupProf = "AUXILIARES ADMINISTRATIVOS";
                txtGroupCotEmp.setText("7");
                break;
            case 7:
                groupProf = "OFICIALES DE PRIMERA Y SEGUNDA";
                txtGroupCotEmp.setText("8");
                break;
            case 8:
                groupProf = "OFICIALES DE TERCERA Y ESPECIALISTAS";
                txtGroupCotEmp.setText("9");
                break;
            case 9:
                groupProf = "PEONES";
                txtGroupCotEmp.setText("10");
                break;
            default:
                throw new AssertionError();
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ControlEmpScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ControlEmpScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ControlEmpScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ControlEmpScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new ControlEmpScreen().setVisible(true);
        });
    }

    @Override
    public Image getIconImage() {
        Image retValue = Toolkit.getDefaultToolkit().
                getImage(ClassLoader.getSystemResource("images/logotipo.png"));
        return retValue;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton btnReturn;
    private javax.swing.JButton btnSaveEmp;
    public javax.swing.JComboBox<String> cmbEmpCountry;
    public javax.swing.JComboBox<String> cmbEmpDepartment;
    public javax.swing.JComboBox<String> cmbEmpJob;
    private javax.swing.JComboBox<String> cmbGroupProf;
    public com.toedter.calendar.JDateChooser dtDateOfBirthEmp;
    public com.toedter.calendar.JDateChooser dtDateOfSeniorityEmp;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel lblCapital;
    private javax.swing.JLabel lblCountry;
    private javax.swing.JLabel lblDNI;
    private javax.swing.JLabel lblDateBirth;
    private javax.swing.JLabel lblDateOld;
    private javax.swing.JLabel lblDpto;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblGroupCot;
    private javax.swing.JLabel lblGroupPro;
    private javax.swing.JLabel lblJob;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblNumSS;
    private javax.swing.JLabel lblPhone;
    private javax.swing.JLabel lblSurnames;
    public javax.swing.JTextField txtCapitalEmp;
    public javax.swing.JTextField txtDNIEmp;
    public javax.swing.JTextField txtEmailEmp;
    public javax.swing.JTextField txtGroupCotEmp;
    public javax.swing.JTextField txtNameEmp;
    public javax.swing.JTextField txtPhoneEmp;
    public javax.swing.JTextField txtSSNumEmp;
    public javax.swing.JTextField txtSurnamesEmp;
    // End of variables declaration//GEN-END:variables
}
