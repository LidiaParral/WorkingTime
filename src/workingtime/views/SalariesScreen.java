/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package workingtime.views;

import java.awt.Color;
import java.awt.Font;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import workingtime.database.Conexion;
import workingtime.model.ExportExcel;
import workingtime.model.CleanTable;
import workingtime.model.ResetFields;

/**
 *
 * @author Lidia Parral
 */
public final class SalariesScreen extends javax.swing.JFrame {

    public ResetFields reset = new ResetFields();
    public ExportExcel export = new ExportExcel();
    public CleanTable lmp = new CleanTable();
    
    Conexion conn = new Conexion();
    Connection conect;

    DefaultTableModel model;

    PreparedStatement ps;
    Statement st;

    ResultSet rs;

    String sql;
    String idUser;
    String date;
    String search;
    String dev;
    String ded;
    String liqTotal;

    int selectedRow;

    /**
     * Creates new form NominaScreen
     */
    public SalariesScreen() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.getContentPane().setBackground(Color.WHITE);
        lblIdUser.setVisible(false);      
        lblName.setFont(new Font("Century Gothic",Font.BOLD,12));
        lblSurnames.setFont(new Font("Century Gothic",Font.BOLD,12));
        lblNumSSEmp1.setFont(new Font("Century Gothic",Font.BOLD,12));
        lblGrupoCotizEmp1.setFont(new Font("Century Gothic",Font.BOLD,12));
        lblGrupoProfEmp1.setFont(new Font("Century Gothic",Font.BOLD,12));
        lblDNIEmp1.setFont(new Font("Century Gothic",Font.BOLD,12));
        lblDateSearch.setFont(new Font("Century Gothic",Font.BOLD,12));
        btnUpdateNomina.setFont(new Font("Century Gothic",Font.BOLD,12));
        btnReturn.setFont(new Font("Century Gothic",Font.PLAIN,12));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblNombreEmp = new javax.swing.JLabel();
        lblApellidosEmp = new javax.swing.JLabel();
        lblDNIEmp = new javax.swing.JLabel();
        lblNumSSEmp = new javax.swing.JLabel();
        lblGrupoCotizEmp = new javax.swing.JLabel();
        lblGrupoProfEmp = new javax.swing.JLabel();
        lblIdUser = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        lblSurnames = new javax.swing.JLabel();
        lblDNIEmp1 = new javax.swing.JLabel();
        lblNumSSEmp1 = new javax.swing.JLabel();
        lblGrupoCotizEmp1 = new javax.swing.JLabel();
        lblGrupoProfEmp1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TableSalaries = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        btnReturn = new javax.swing.JButton();
        btnUpdateNomina = new javax.swing.JButton();
        btnSearchNomina = new javax.swing.JButton();
        btnDownloadNomina = new javax.swing.JButton();
        dtDateSalaries = new com.toedter.calendar.JDateChooser();
        lblDateSearch = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setUndecorated(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        lblNombreEmp.setText("Nombre");

        lblApellidosEmp.setText("Apellidos");

        lblDNIEmp.setText("DNI");

        lblNumSSEmp.setText("NumeroSS");

        lblGrupoCotizEmp.setText("GrupoCotizacion");

        lblGrupoProfEmp.setText("GrupoProfesional");

        lblName.setText("Nombre:");

        lblSurnames.setText("Apellidos:");

        lblDNIEmp1.setText("DNI:");

        lblNumSSEmp1.setText("Numero Seguridad Social:");

        lblGrupoCotizEmp1.setText("Grupo de Cotizaci√≥n:");

        lblGrupoProfEmp1.setText("Grupo Profesional:");

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setIcon(new javax.swing.ImageIcon("C:\\Users\\parra\\Downloads\\factura.png")); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(lblIdUser)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblDNIEmp)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblName)
                            .addComponent(lblSurnames)
                            .addComponent(lblNombreEmp)
                            .addComponent(lblApellidosEmp)
                            .addComponent(lblDNIEmp1))
                        .addGap(145, 145, 145)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblGrupoProfEmp1)
                            .addComponent(lblNumSSEmp)
                            .addComponent(lblNumSSEmp1)
                            .addComponent(lblGrupoCotizEmp1)
                            .addComponent(lblGrupoProfEmp)
                            .addComponent(lblGrupoCotizEmp))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(83, 83, 83))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(lblIdUser)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblName)
                            .addComponent(lblNumSSEmp1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblNombreEmp)
                            .addComponent(lblNumSSEmp))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblSurnames)
                            .addComponent(lblGrupoCotizEmp1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblApellidosEmp)
                            .addComponent(lblGrupoCotizEmp))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblDNIEmp1)
                            .addComponent(lblGrupoProfEmp1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblDNIEmp)
                            .addComponent(lblGrupoProfEmp)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        TableSalaries.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Salario Base", "Total Devengado", "Total Deducido", "Liquido Total", "Horas Trabajadas", "Fecha Inicio", "Fecha Fin"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(TableSalaries);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        btnReturn.setBackground(new java.awt.Color(204, 204, 204));
        btnReturn.setForeground(new java.awt.Color(255, 255, 255));
        btnReturn.setText("CANCELAR");
        btnReturn.setToolTipText("Este bot√≥n permite volver a la p√°gina anterior.");
        btnReturn.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnReturn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReturnActionPerformed(evt);
            }
        });

        btnUpdateNomina.setBackground(new java.awt.Color(38, 70, 166));
        btnUpdateNomina.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdateNomina.setText("ACTUALIZAR");
        btnUpdateNomina.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnUpdateNomina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateNominaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(btnUpdateNomina, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addComponent(btnReturn, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnReturn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpdateNomina, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(29, Short.MAX_VALUE))
        );

        btnSearchNomina.setBackground(new java.awt.Color(38, 70, 166));
        btnSearchNomina.setForeground(new java.awt.Color(255, 255, 255));
        btnSearchNomina.setIcon(new javax.swing.ImageIcon("C:\\Users\\parra\\Downloads\\lupa (2).png")); // NOI18N
        btnSearchNomina.setToolTipText("Este bot√≥n permite buscar la n√≥mina del empleado por fecha");
        btnSearchNomina.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnSearchNomina.setMaximumSize(new java.awt.Dimension(28, 28));
        btnSearchNomina.setMinimumSize(new java.awt.Dimension(28, 28));
        btnSearchNomina.setPreferredSize(new java.awt.Dimension(28, 28));
        btnSearchNomina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchNominaActionPerformed(evt);
            }
        });

        btnDownloadNomina.setForeground(new java.awt.Color(255, 255, 255));
        btnDownloadNomina.setIcon(new javax.swing.ImageIcon("C:\\Users\\parra\\Downloads\\documento (3).png")); // NOI18N
        btnDownloadNomina.setToolTipText("Este bot√≥n permite descargar el documento de la n√≥mina seleccionada.");
        btnDownloadNomina.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnDownloadNomina.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnDownloadNomina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDownloadNominaActionPerformed(evt);
            }
        });

        dtDateSalaries.setBackground(new java.awt.Color(255, 255, 255));
        dtDateSalaries.setDateFormatString("yyyy-MM-dd");

        lblDateSearch.setText("Fecha de b√∫squeda:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 716, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(lblDateSearch)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dtDateSalaries, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSearchNomina, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnDownloadNomina, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 29, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblDateSearch)
                        .addGap(27, 27, 27))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnDownloadNomina)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(btnSearchNomina, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(dtDateSalaries, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnReturnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReturnActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnReturnActionPerformed

    private void btnDownloadNominaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDownloadNominaActionPerformed
        selectedRow = TableSalaries.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "No se ha seleccionado ning√∫n registro para eliminar", "ERROR", JOptionPane.INFORMATION_MESSAGE);
        } else {
            try {
                JOptionPane.showMessageDialog(null, "Se va a descargar el documento en Excel", "EXPORTAR DOCUMENTO", JOptionPane.PLAIN_MESSAGE);
                export.exportarExcel(TableSalaries);
            } catch (IOException ex) {
                Logger.getLogger(SalariesScreen.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnDownloadNominaActionPerformed

    private void btnSearchNominaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchNominaActionPerformed
        search = dtDateSalaries.getDateFormatString();
        if (search.equals("")) {
            JOptionPane.showMessageDialog(null, "No puede estar vac√≠o este campo.", "TODOS LOS EMPLEADOS", JOptionPane.ERROR_MESSAGE);
        } else {
            if (TableSalaries.getRowCount() == 0) {
                searchNomina();
            } else {
                lmp.tableCleaning(model);
                searchNomina();
            }
        }
    }//GEN-LAST:event_btnSearchNominaActionPerformed

    private void btnUpdateNominaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateNominaActionPerformed
        selectedRow = TableSalaries.getSelectedRow();
        btnUpdateNomina.setBackground(new Color(252, 201, 131));
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "No se ha seleccionado ning√∫n registro para actualizar", "ERROR", JOptionPane.INFORMATION_MESSAGE);
        } else {
            updateNomina();
            existSalary();
        }
        btnUpdateNomina.setBackground(new Color(38,70,166));
    }//GEN-LAST:event_btnUpdateNominaActionPerformed

    public void existSalary() {
        idUser = lblIdUser.getText();
        try {
            sql = "SELECT * FROM nominas WHERE IdEmpleado='" + idUser + "'";

            conect = conn.getConexion();
            ps = conect.prepareStatement(sql);
            rs = ps.executeQuery(sql);

            Object[] nomina = new Object[7];
            model = (DefaultTableModel) TableSalaries.getModel();
            while (rs.next()) {
                nomina[0] = rs.getString("SalarioBase");
                nomina[1] = rs.getString("TotalDevengado");
                nomina[2] = rs.getString("TotalDeducciones");
                nomina[3] = rs.getString("LiquidoTotal");
                nomina[4] = rs.getString("HorasTrabajadas");
                nomina[5] = rs.getDate("FechaInicio");
                nomina[6] = rs.getDate("FechaFin");
                model.addRow(nomina);
            }
            TableSalaries.setModel(model);
        } catch (SQLException ex) {
            System.err.println("Error:" + ex);
        }
    }

    public void searchNomina() {
        date = new SimpleDateFormat("yyyy-MM-dd").format(dtDateSalaries.getDate());
        try {
            sql = "SELECT * FROM nominas WHERE FechaInicio='" + date + "'";

            conect = conn.getConexion();
            ps = conect.prepareStatement(sql);
            rs = ps.executeQuery(sql);
            Object[] nomina = new Object[7];
            model = (DefaultTableModel) TableSalaries.getModel();
            while (rs.next()) {
                nomina[0] = rs.getString("SalarioBase");
                nomina[1] = rs.getString("TotalDevengado");
                nomina[2] = rs.getString("TotalDeducciones");
                nomina[3] = rs.getString("LiquidoTotal");
                nomina[4] = rs.getString("HorasTrabajadas");
                nomina[5] = rs.getDate("FechaInicio");
                nomina[6] = rs.getDate("FechaFin");
                model.addRow(nomina);
            }
            TableSalaries.setModel(model);
        } catch (SQLException ex) {
            System.err.println("Error:" + ex);
        }
    }
    
    
     public void updateNomina() {
        idUser = lblIdUser.getText();
        dev = String.valueOf(model.getValueAt(TableSalaries.getSelectedRow(), 1));
        ded = String.valueOf(model.getValueAt(TableSalaries.getSelectedRow(), 2));
        liqTotal = String.valueOf(model.getValueAt(TableSalaries.getSelectedRow(), 3));
        try {

            sql = "UPDATE nominas SET TotalDevengado='" + dev + "', TotalDeducciones='" + ded + "', LiquidoTotal='" + liqTotal
                    + "' WHERE IdEmpleado ='" + idUser + "'";

            conect = conn.getConexion();
            st = conect.createStatement();
            st.executeUpdate(sql);

        } catch (SQLException ex) {
            System.err.println("Error:" + ex);
        }
        lmp.tableCleaning(model);
    }


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SalariesScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SalariesScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SalariesScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SalariesScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new SalariesScreen().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TableSalaries;
    private javax.swing.JButton btnDownloadNomina;
    private javax.swing.JButton btnReturn;
    private javax.swing.JButton btnSearchNomina;
    public javax.swing.JButton btnUpdateNomina;
    public com.toedter.calendar.JDateChooser dtDateSalaries;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JLabel lblApellidosEmp;
    public javax.swing.JLabel lblDNIEmp;
    public javax.swing.JLabel lblDNIEmp1;
    private javax.swing.JLabel lblDateSearch;
    public javax.swing.JLabel lblGrupoCotizEmp;
    public javax.swing.JLabel lblGrupoCotizEmp1;
    public javax.swing.JLabel lblGrupoProfEmp;
    public javax.swing.JLabel lblGrupoProfEmp1;
    public javax.swing.JLabel lblIdUser;
    public javax.swing.JLabel lblName;
    public javax.swing.JLabel lblNombreEmp;
    public javax.swing.JLabel lblNumSSEmp;
    public javax.swing.JLabel lblNumSSEmp1;
    public javax.swing.JLabel lblSurnames;
    // End of variables declaration//GEN-END:variables
}
