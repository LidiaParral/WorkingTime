/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package workingtime.views;

import java.awt.Color;
import java.awt.Font;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import workingtime.database.Conexion;
import workingtime.model.CleanTable;
import workingtime.model.ResetFields;

/**
 *
 * @author Lidia Parral
 */
public final class AllTimesScreen extends javax.swing.JFrame {

    public ResetFields reset = new ResetFields();
    public CleanTable lmp = new CleanTable();

    Conexion conn = new Conexion();
    Connection conect;

    DefaultTableModel model;

    PreparedStatement ps;
    Statement st;

    ResultSet rs;

    String sql;
    String idUser;
    String dateNow;
    String reason;
    String timeStart;
    String timeFin;
    String timeReasonStart;
    String timeReasonFin;
    String date;

    int selectedRow;
    Object[] options = {"Aceptar", "Cancelar"};
    int election;

    /**
     * Creates new form TodosHorariosScreen
     */
    public AllTimesScreen() {
        initComponents();
        this.getContentPane().setBackground(Color.WHITE);
        this.setLocationRelativeTo(null);
        lblIdEmp.setVisible(false);
        lblNumEmp.setFont(new Font("Montserrat",Font.BOLD,12));
        lblNomEmp.setFont(new Font("Montserrat",Font.BOLD,12));
        lblJobEmp.setFont(new Font("Montserrat",Font.BOLD,12));
        lblDptoEmp.setFont(new Font("Montserrat",Font.BOLD,12));
        btnUpdateTime.setFont(new Font("Montserrat",Font.BOLD,12));
        btnDeleteTime.setFont(new Font("Montserrat",Font.BOLD,12));
        btnCancelar.setFont(new Font("Montserrat",Font.PLAIN,12));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TableTime = new javax.swing.JTable();
        lblImage = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        btnUpdateTime = new javax.swing.JButton();
        btnDeleteTime = new javax.swing.JButton();
        lblIdEmp = new javax.swing.JLabel();
        btnCancelar = new javax.swing.JButton();
        lblNumEmp = new javax.swing.JLabel();
        lblNomEmp = new javax.swing.JLabel();
        lblJobEmp = new javax.swing.JLabel();
        lblDptoEmp = new javax.swing.JLabel();
        lblId = new javax.swing.JLabel();
        lblNom = new javax.swing.JLabel();
        lblPuesto = new javax.swing.JLabel();
        lblDpto = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        TableTime.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Fecha", "Hora Inicio", "Hora Fin", "Razon", "Hora Inicio Razon", "Hora Fin Razon"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(TableTime);

        lblImage.setBackground(new java.awt.Color(255, 255, 255));
        lblImage.setIcon(new javax.swing.ImageIcon("C:\\Users\\parra\\Downloads\\gestion-del-tiempo.png")); // NOI18N

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        btnUpdateTime.setBackground(new java.awt.Color(38, 70, 166));
        btnUpdateTime.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdateTime.setText("ACTUALIZAR");
        btnUpdateTime.setToolTipText("Este botón permite actualizar el registro seleccionado");
        btnUpdateTime.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnUpdateTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateTimeActionPerformed(evt);
            }
        });

        btnDeleteTime.setBackground(new java.awt.Color(255, 126, 60));
        btnDeleteTime.setForeground(new java.awt.Color(255, 255, 255));
        btnDeleteTime.setText("ELIMINAR");
        btnDeleteTime.setToolTipText("Este botón permite borrar el registro seleccionado.");
        btnDeleteTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteTimeActionPerformed(evt);
            }
        });

        lblIdEmp.setEnabled(false);
        lblIdEmp.setFocusable(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(327, 327, 327)
                        .addComponent(lblIdEmp))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnUpdateTime, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(btnDeleteTime, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnUpdateTime, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnDeleteTime, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblIdEmp))
                .addGap(26, 26, 26))
        );

        btnCancelar.setBackground(new java.awt.Color(204, 204, 204));
        btnCancelar.setForeground(new java.awt.Color(255, 255, 255));
        btnCancelar.setText("CANCELAR");
        btnCancelar.setToolTipText("Este botón permite volver a la página anterior");
        btnCancelar.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        lblNumEmp.setBackground(new java.awt.Color(255, 255, 255));
        lblNumEmp.setText("Nº de Empleado:");

        lblNomEmp.setBackground(new java.awt.Color(255, 255, 255));
        lblNomEmp.setText("Nombre:");

        lblJobEmp.setBackground(new java.awt.Color(255, 255, 255));
        lblJobEmp.setText("Puesto de Trabajo:");

        lblDptoEmp.setBackground(new java.awt.Color(255, 255, 255));
        lblDptoEmp.setText("Departamento:");

        lblId.setBackground(new java.awt.Color(255, 255, 255));

        lblNom.setBackground(new java.awt.Color(255, 255, 255));

        lblPuesto.setBackground(new java.awt.Color(255, 255, 255));

        lblDpto.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 642, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblNumEmp)
                            .addComponent(lblId)
                            .addComponent(lblNomEmp)
                            .addComponent(lblNom))
                        .addGap(103, 103, 103)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblDptoEmp)
                            .addComponent(lblJobEmp)
                            .addComponent(lblPuesto)
                            .addComponent(lblDpto))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblImage, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(lblImage, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblNumEmp)
                            .addComponent(lblJobEmp))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblId)
                            .addComponent(lblPuesto))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblNomEmp)
                            .addComponent(lblDptoEmp))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblDpto)
                            .addComponent(lblNom))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDeleteTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteTimeActionPerformed
        selectedRow = TableTime.getSelectedRow();
        election = JOptionPane.showOptionDialog(rootPane, "En realidad desea eliminar los datos del empleado permanentemente", "Mensaje de Confirmacion",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE, null, options, "Aceptar");
        btnDeleteTime.setBackground(new Color(145, 150, 255));
        if (election == JOptionPane.YES_OPTION) {
            if (selectedRow < 0) {
                JOptionPane.showMessageDialog(null, "No se ha seleccionado ningún registro para eliminar", "ERROR", JOptionPane.INFORMATION_MESSAGE);
            } else {
                deleteWorkingDay();
                existWorkingDay();
            }
        } else if (election == JOptionPane.NO_OPTION) {
            JOptionPane.showMessageDialog(null, "No se ha actualizado el empleado de la base de datos", "EMPLEADO", JOptionPane.PLAIN_MESSAGE);
        }
        btnDeleteTime.setBackground(new Color(255, 126, 60));
    }//GEN-LAST:event_btnDeleteTimeActionPerformed

    private void btnUpdateTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateTimeActionPerformed
        selectedRow = TableTime.getSelectedRow();
        election = JOptionPane.showOptionDialog(rootPane, "En realidad desea actualizar los datos del empleado permanentemente", "Mensaje de Confirmacion",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE, null, options, "Aceptar");
        btnUpdateTime.setBackground(new Color(252, 201, 131));
        if (election == JOptionPane.YES_OPTION) {
            if (selectedRow < 0) {
                JOptionPane.showMessageDialog(null, "No se ha seleccionado ningún registro para actualizar", "ERROR", JOptionPane.INFORMATION_MESSAGE);
            } else {
                updateWorkingDay();
                existWorkingDay();
            }
        } else if (election == JOptionPane.NO_OPTION) {
            JOptionPane.showMessageDialog(null, "No se ha actualizado el empleado de la base de datos", "EMPLEADO", JOptionPane.PLAIN_MESSAGE);
        }
        btnUpdateTime.setBackground(new Color(38, 70, 166));
    }//GEN-LAST:event_btnUpdateTimeActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    public void existWorkingDay() {
        sql = "SELECT * FROM registro_horas WHERE IdEmpleado='" + lblIdEmp.getText() + "'";

        try {
            conect = conn.getConexion();
            st = conect.createStatement();
            rs = st.executeQuery(sql);
            Object[] horario = new Object[6];
            model = (DefaultTableModel) TableTime.getModel();
            while (rs.next()) {
                horario[0] = rs.getString("FechaActual");
                horario[1] = rs.getTime("HoraInicio");
                horario[2] = rs.getTime("HoraFin");
                horario[3] = rs.getString("OtrasRazones");
                horario[4] = rs.getTime("HoraInicioRazones");
                horario[5] = rs.getTime("HoraFinRazones");

                model.addRow(horario);
            }
            TableTime.setModel(model);

        } catch (SQLException ex) {
            System.err.println("Error:" + ex);
        }
    }

    public void deleteWorkingDay() {
        idUser = lblIdEmp.getText();
        try {
            sql = "DELETE FROM registro_horas WHERE IdEmpleado='" + idUser + "'";

            conect = conn.getConexion();
            st = conect.createStatement();
            st.executeUpdate(sql);

        } catch (SQLException ex) {
            System.err.println("Error:" + ex);
        }
        lmp.tableCleaning(model);
    }

    public void updateWorkingDay() {
        date = String.valueOf(model.getValueAt(TableTime.getSelectedRow(), 0));
        timeStart = String.valueOf(model.getValueAt(TableTime.getSelectedRow(), 1));
        timeFin = String.valueOf(model.getValueAt(TableTime.getSelectedRow(), 2));
        timeReasonStart = String.valueOf(model.getValueAt(TableTime.getSelectedRow(), 4));
        timeReasonFin = String.valueOf(model.getValueAt(TableTime.getSelectedRow(), 5));
        try {

            sql = "UPDATE registro_horas SET HoraInicio='" + timeStart + "', HoraFin='" + timeFin + "', HoraInicioRazones='" + timeReasonStart + "', HoraFinRazones='" + timeReasonFin
                    + "' WHERE IdEmpleado ='" + lblIdEmp.getText() + "' AND FechaActual='" + date + "'";

            conect = conn.getConexion();
            st = conect.createStatement();
            st.executeUpdate(sql);

        } catch (SQLException ex) {
            System.err.println("Error:" + ex);
        }
        lmp.tableCleaning(model);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AllTimesScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AllTimesScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AllTimesScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AllTimesScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new AllTimesScreen().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TableTime;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnDeleteTime;
    private javax.swing.JButton btnUpdateTime;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JLabel lblDpto;
    private javax.swing.JLabel lblDptoEmp;
    public javax.swing.JLabel lblId;
    public javax.swing.JLabel lblIdEmp;
    private javax.swing.JLabel lblImage;
    private javax.swing.JLabel lblJobEmp;
    public javax.swing.JLabel lblNom;
    private javax.swing.JLabel lblNomEmp;
    private javax.swing.JLabel lblNumEmp;
    public javax.swing.JLabel lblPuesto;
    // End of variables declaration//GEN-END:variables
}
