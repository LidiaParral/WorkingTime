/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package workingtime.views;

import java.awt.Color;
import java.awt.Font;
import java.awt.Image;
import java.awt.Toolkit;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 * Class HomeScreen
 * @author Lidia Parral
 * @version 1.0.0
 */
public class HomeScreen extends javax.swing.JFrame {

    private final LoginScreen login = new LoginScreen();

    /**
     * Creates new form HomeScreen
     */
    public HomeScreen() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.getContentPane().setBackground(Color.WHITE);
        lblIdEmp.setVisible(false);
        lblNamEmp.setVisible(false);
        lblSurnamesEmp.setVisible(false);
        lblDNIEmp.setVisible(false);
        lblEmailEmp.setVisible(false);
        lblGroupCot.setVisible(false);
        lblGroupProf.setVisible(false);
        lblNumSS.setVisible(false);
        lblJobEmp.setVisible(false);
        lblDepartmentEmp.setVisible(false);
        btnLogout.setFont(new Font("Century Gothic", Font.BOLD, 12));
        mnAddDoc.setFont(new Font("Century Gothic", Font.PLAIN, 12));
        mnAddSalary.setFont(new Font("Century Gothic", Font.PLAIN, 12));
        mnAllEmp.setFont(new Font("Century Gothic", Font.PLAIN, 12));
        mnControlEmp.setFont(new Font("Century Gothic", Font.PLAIN, 12));
        mnNomina.setFont(new Font("Century Gothic", Font.PLAIN, 12));
        mnProfileUser.setFont(new Font("Century Gothic", Font.PLAIN, 12));
        mnRegisterAbsence.setFont(new Font("Century Gothic", Font.PLAIN, 12));
        mnRegisterWorkingDay.setFont(new Font("Century Gothic", Font.PLAIN, 12));
        mnAllDocuments.setFont(new Font("Century Gothic", Font.PLAIN, 12));
        mnAllTimes.setFont(new Font("Century Gothic", Font.PLAIN, 12));
        mnDocuments.setFont(new Font("Century Gothic", Font.PLAIN, 14));
        mnEmple.setFont(new Font("Century Gothic", Font.PLAIN, 14));
        mnHorario.setFont(new Font("Century Gothic", Font.PLAIN, 14));
        mnSalary.setFont(new Font("Century Gothic", Font.PLAIN, 14));
        mnProfile.setFont(new Font("Century Gothic", Font.PLAIN, 14));

        mnAddDoc.setBackground(Color.WHITE);
        mnAddSalary.setBackground(Color.WHITE);
        mnAllEmp.setBackground(Color.WHITE);
        mnControlEmp.setBackground(Color.WHITE);
        mnRegisterAbsence.setBackground(Color.WHITE);
        mnRegisterWorkingDay.setBackground(Color.WHITE);
        mnAllDocuments.setBackground(Color.WHITE);
        mnProfileUser.setBackground(Color.WHITE);
        mnRegisterAbsence.setBackground(Color.WHITE);
        mnAllTimes.setBackground(Color.WHITE);
        mnNomina.setBackground(Color.WHITE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblNamEmp = new javax.swing.JLabel();
        lblIdEmp = new javax.swing.JLabel();
        lblEmailEmp = new javax.swing.JLabel();
        lblSurnamesEmp = new javax.swing.JLabel();
        lblJobEmp = new javax.swing.JLabel();
        fondo = new javax.swing.JLabel();
        lblNumSS = new javax.swing.JLabel();
        lblGroupCot = new javax.swing.JLabel();
        lblGroupProf = new javax.swing.JLabel();
        lblDNIEmp = new javax.swing.JLabel();
        lblDepartmentEmp = new javax.swing.JLabel();
        btnLogout = new javax.swing.JButton();
        mnbHome = new javax.swing.JMenuBar();
        mnHorario = new javax.swing.JMenu();
        mnRegisterWorkingDay = new javax.swing.JMenuItem();
        mnRegisterAbsence = new javax.swing.JMenuItem();
        mnAllTimes = new javax.swing.JMenuItem();
        mnSalary = new javax.swing.JMenu();
        mnAddSalary = new javax.swing.JMenuItem();
        mnNomina = new javax.swing.JMenuItem();
        mnDocuments = new javax.swing.JMenu();
        mnAddDoc = new javax.swing.JMenuItem();
        mnAllDocuments = new javax.swing.JMenuItem();
        mnProfile = new javax.swing.JMenu();
        mnProfileUser = new javax.swing.JMenuItem();
        mnEmple = new javax.swing.JMenu();
        mnControlEmp = new javax.swing.JMenuItem();
        mnAllEmp = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setIconImage(getIconImage());
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        lblNamEmp.setEnabled(false);
        lblNamEmp.setFocusable(false);

        lblIdEmp.setEnabled(false);
        lblIdEmp.setFocusable(false);

        lblEmailEmp.setEnabled(false);
        lblEmailEmp.setFocusable(false);

        lblSurnamesEmp.setEnabled(false);
        lblSurnamesEmp.setFocusable(false);

        lblJobEmp.setEnabled(false);
        lblJobEmp.setFocusable(false);

        fondo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/workingtime_home.png"))); // NOI18N

        btnLogout.setBackground(new java.awt.Color(38, 70, 166));
        btnLogout.setForeground(new java.awt.Color(255, 255, 255));
        btnLogout.setText("LOGOUT");
        btnLogout.setToolTipText("Este botón permite al usuario desloguerase de la aplicación.");
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(170, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(fondo, javax.swing.GroupLayout.PREFERRED_SIZE, 479, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(127, 127, 127))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(lblNumSS)
                        .addGap(46, 46, 46)
                        .addComponent(lblGroupCot)
                        .addGap(58, 58, 58)
                        .addComponent(lblGroupProf)
                        .addGap(98, 98, 98))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(btnLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblNamEmp, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(37, 37, 37)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblSurnamesEmp)
                            .addComponent(lblJobEmp, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addComponent(lblDNIEmp)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(90, 90, 90)
                                    .addComponent(lblIdEmp))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(28, 28, 28)
                                    .addComponent(lblDepartmentEmp)))
                            .addGap(113, 113, 113))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addComponent(lblEmailEmp, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(283, 283, 283)))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(lblEmailEmp, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(lblNamEmp, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(lblSurnamesEmp)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lblJobEmp, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 71, Short.MAX_VALUE)
                        .addComponent(fondo, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblNumSS)
                            .addComponent(lblGroupCot)
                            .addComponent(lblGroupProf))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addComponent(lblIdEmp))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(45, 45, 45)
                                .addComponent(lblDepartmentEmp)))
                        .addGap(32, 32, 32))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDNIEmp))
                        .addGap(17, 17, 17))))
        );

        mnHorario.setText("Horario");

        mnRegisterWorkingDay.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/hora.png"))); // NOI18N
        mnRegisterWorkingDay.setText("Registro jornadas");
        mnRegisterWorkingDay.setToolTipText("Esta opción permite registrar la jornada del empleado.");
        mnRegisterWorkingDay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnRegisterWorkingDayActionPerformed(evt);
            }
        });
        mnHorario.add(mnRegisterWorkingDay);

        mnRegisterAbsence.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/ausencias.png"))); // NOI18N
        mnRegisterAbsence.setText("Registro ausencias");
        mnRegisterAbsence.setToolTipText("Esta opción permite registrar la ausencia del empleado.");
        mnRegisterAbsence.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnRegisterAbsenceActionPerformed(evt);
            }
        });
        mnHorario.add(mnRegisterAbsence);

        mnAllTimes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/buscar.png"))); // NOI18N
        mnAllTimes.setText("Todos los registros");
        mnAllTimes.setToolTipText("Esta opción permite consultar todos los registros de jornada del empleado.");
        mnAllTimes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnAllTimesActionPerformed(evt);
            }
        });
        mnHorario.add(mnAllTimes);

        mnbHome.add(mnHorario);

        mnSalary.setText("Pago");

        mnAddSalary.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/nomina.png"))); // NOI18N
        mnAddSalary.setText("Añadir nómina");
        mnAddSalary.setToolTipText("Esta opción permite añadir los datos de la nómina del emplado");
        mnAddSalary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnAddSalaryActionPerformed(evt);
            }
        });
        mnSalary.add(mnAddSalary);

        mnNomina.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/buscarnomina.png"))); // NOI18N
        mnNomina.setText("Todas las nóminas");
        mnNomina.setToolTipText("Esta opción permite consultar y actualizar la nómina del empleado.");
        mnNomina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnNominaActionPerformed(evt);
            }
        });
        mnSalary.add(mnNomina);

        mnbHome.add(mnSalary);

        mnDocuments.setText("Documentos");

        mnAddDoc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/carpeta.png"))); // NOI18N
        mnAddDoc.setText("Añadir documento");
        mnAddDoc.setToolTipText("Esta opción permite añadir los documentos necesarios para el empleado");
        mnAddDoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnAddDocActionPerformed(evt);
            }
        });
        mnDocuments.add(mnAddDoc);

        mnAllDocuments.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/documentos.png"))); // NOI18N
        mnAllDocuments.setText("Todos los documentos");
        mnAllDocuments.setToolTipText("Esta opción permite consultar todos los documentos");
        mnAllDocuments.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnAllDocumentsActionPerformed(evt);
            }
        });
        mnDocuments.add(mnAllDocuments);

        mnbHome.add(mnDocuments);

        mnProfile.setText("Perfil");
        mnProfile.setBorderPainted(false);

        mnProfileUser.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/perfil.png"))); // NOI18N
        mnProfileUser.setText("Perfil del usuario");
        mnProfileUser.setToolTipText("Esta opción permite actualizar los datos del empleado.");
        mnProfileUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnProfileUserActionPerformed(evt);
            }
        });
        mnProfile.add(mnProfileUser);

        mnbHome.add(mnProfile);

        mnEmple.setText("Empleados");

        mnControlEmp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/empleados.png"))); // NOI18N
        mnControlEmp.setText("Añadir empleado");
        mnControlEmp.setToolTipText("Esta opción permite añadir un empleado");
        mnControlEmp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnControlEmpActionPerformed(evt);
            }
        });
        mnEmple.add(mnControlEmp);

        mnAllEmp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/buscar.png"))); // NOI18N
        mnAllEmp.setText("Todos los empleados");
        mnAllEmp.setToolTipText("Esta opción permite consultar todos los empleados.");
        mnAllEmp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnAllEmpActionPerformed(evt);
            }
        });
        mnEmple.add(mnAllEmp);

        mnbHome.add(mnEmple);

        setJMenuBar(mnbHome);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 75, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Método mnRegisterWorkingDayActionPerformed: Este método permite al
     * usuario que al seleccionar el menú Registro jornadas se abra la pantalla
     * TimeScreen, para añadir el horario laboral.
     *
     * @param evt
     */
    private void mnRegisterWorkingDayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnRegisterWorkingDayActionPerformed
        TimeScreen time = new TimeScreen();
        time.lblIdEmp.setText(lblIdEmp.getText());
        time.setVisible(true);
    }//GEN-LAST:event_mnRegisterWorkingDayActionPerformed

    /**
     * Método mnNominaActionPerformed: Este método permite al usuario que al
 seleccionar el menú Todas las nóminas se abra la pantalla SalariesScreen,
 para consult las nóminas.
     *
     * @param evt
     */
    private void mnNominaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnNominaActionPerformed
        SalariesScreen salaries = new SalariesScreen();
        salaries.lblIdUser.setText(lblIdEmp.getText());
        salaries.lblNombreEmp.setText(lblNamEmp.getText().toUpperCase());
        salaries.lblApellidosEmp.setText(lblSurnamesEmp.getText().toUpperCase());
        salaries.lblDNIEmp.setText(lblDNIEmp.getText());
        salaries.lblGrupoCotizEmp.setText(lblGroupCot.getText());
        salaries.lblGrupoProfEmp.setText(lblGroupProf.getText().toUpperCase());
        salaries.lblNumSSEmp.setText(lblNumSS.getText());
        salaries.existSalary();
        salaries.setVisible(true);
    }//GEN-LAST:event_mnNominaActionPerformed

    /**
     * Método mnAllDocumentsActionPerformed: Este método permite al usuario que
 al seleccionar el menú Todos los documentos se abra la pantalla
 AllDocumentsScreen, para consult todos los documentos subidos.
     *
     * @param evt
     */
    private void mnAllDocumentsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnAllDocumentsActionPerformed
        AllDocumentsScreen doc = new AllDocumentsScreen();
        doc.lblIdEmp.setText(lblIdEmp.getText());
        doc.consult();
        doc.setVisible(true);
    }//GEN-LAST:event_mnAllDocumentsActionPerformed

    /**
     * Método mnRegisterAbsenceActionPerformed: Este método permite al usuario
     * que al seleccionar el menú Registrar ausencias se abra la pantalla
     * AbsencesScreen, para añadir una ausencia.
     *
     * @param evt
     */
    private void mnRegisterAbsenceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnRegisterAbsenceActionPerformed
        AbsencesScreen aus = new AbsencesScreen();
        aus.lblIdEmp.setText(lblIdEmp.getText());
        aus.lblDepartment.setText(lblDepartmentEmp.getText());
        aus.consult();
        aus.setVisible(true);
    }//GEN-LAST:event_mnRegisterAbsenceActionPerformed

    /**
     * Método mnControlEmpActionPerformed: Este método permite al usuario que al
     * seleccionar el menú Añadir empleado se abra la pantalla ControlEmpScreen,
     * para añadir los datos de un empleado.
     *
     * @param evt
     */
    private void mnControlEmpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnControlEmpActionPerformed
        ControlEmpScreen control = new ControlEmpScreen();
        control.setVisible(true);
    }//GEN-LAST:event_mnControlEmpActionPerformed

    /**
     * Método mnAddDocActionPerformed: Este método permite al usuario que al
     * seleccionar el menú Añadir documento se abra la pantalla AddDocScreen,
     * para añadir un documento
     *
     * @param evt
     */
    private void mnAddDocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnAddDocActionPerformed
        AddDocScreen addDoc = new AddDocScreen();
        addDoc.lblIdEmp.setText(lblIdEmp.getText());
        addDoc.setVisible(true);
    }//GEN-LAST:event_mnAddDocActionPerformed

    /**
     * Método mnAllEmpActionPerformed: Este método permite al usuario que al
        seleccionar el menú Todos los empleados se abra la pantalla AllEmpScreen,
        para consult todos los empleados.
     *
     * @param evt
     */
    private void mnAllEmpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnAllEmpActionPerformed
        AllEmpScreen allEmp = new AllEmpScreen();
        allEmp.consult();
        allEmp.setVisible(true);
    }//GEN-LAST:event_mnAllEmpActionPerformed

    /**
     * Método mnAllTimesActionPerformed: Este método permite al usuario que al
 seleccionar el menú Todos los Registros se abra la pantalla
 AllTimesScreen, para consult todos los registros del horario laboral.
     *
     * @param evt
     */
    private void mnAllTimesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnAllTimesActionPerformed
        try {
            AllTimesScreen allTimes = new AllTimesScreen();
            allTimes.lblIdEmp.setText(lblIdEmp.getText());
            allTimes.lblId.setText(lblIdEmp.getText());
            allTimes.lblNom.setText(lblNamEmp.getText());
            allTimes.lblPuesto.setText(lblJobEmp.getText());
            allTimes.lblDpto.setText(lblDepartmentEmp.getText());
            allTimes.existWorkingDay();
            allTimes.setVisible(true);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(HomeScreen.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_mnAllTimesActionPerformed

    /**
     * Botón Logout: Este botón permite al usuario desloguearse y volver a la
     * pantalla LoginScreen.
     *
     * @param evt
     */
    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed
        btnLogout.setBackground(new Color(252, 201, 131));
        this.dispose();
        login.setVisible(true);
    }//GEN-LAST:event_btnLogoutActionPerformed

    /**
     * Método mnProfileUserActionPerformed: Este método permite al usuario que
     * al seleccionar el menú Profile se abra la pantalla ProfileEmpScreen, para
     * actualizar los datos del empleado.
     *
     * @param evt
     */
    private void mnProfileUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnProfileUserActionPerformed
        ProfileEmpScreen profile = new ProfileEmpScreen();
        profile.txtIdEmp.setText(lblIdEmp.getText());
        profile.consult();
        profile.setVisible(true);
    }//GEN-LAST:event_mnProfileUserActionPerformed

    /**
     * Método mnAddSalaryActionPerformed: Este método permite al usuario que al
     * seleccionar el menú Añadir nómina se abra la pantalla AddSalaryScreen,
     * para añadir la nómina de un empleado.
     *
     * @param evt
     */
    private void mnAddSalaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnAddSalaryActionPerformed
        AddSalaryScreen addS = new AddSalaryScreen();
        addS.lblIdEmp.setText(lblIdEmp.getText());
        addS.lblPuesto.setText(lblJobEmp.getText());
        addS.setVisible(true);
    }//GEN-LAST:event_mnAddSalaryActionPerformed

    /**
     * Método getIconImage: Este método permite obtener el icono de la
     * aplicación.
     *
     * @return icon
     */
    @Override
    public Image getIconImage() {
        Image retValue = Toolkit.getDefaultToolkit().
                getImage(ClassLoader.getSystemResource("images/logotipo.png"));
        return retValue;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HomeScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new HomeScreen().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLogout;
    private javax.swing.JLabel fondo;
    private javax.swing.JPanel jPanel1;
    public javax.swing.JLabel lblDNIEmp;
    public javax.swing.JLabel lblDepartmentEmp;
    public javax.swing.JLabel lblEmailEmp;
    public javax.swing.JLabel lblGroupCot;
    public javax.swing.JLabel lblGroupProf;
    public javax.swing.JLabel lblIdEmp;
    public javax.swing.JLabel lblJobEmp;
    public javax.swing.JLabel lblNamEmp;
    public javax.swing.JLabel lblNumSS;
    public javax.swing.JLabel lblSurnamesEmp;
    private javax.swing.JMenuItem mnAddDoc;
    public javax.swing.JMenuItem mnAddSalary;
    public javax.swing.JMenuItem mnAllDocuments;
    public javax.swing.JMenuItem mnAllEmp;
    public javax.swing.JMenuItem mnAllTimes;
    public javax.swing.JMenuItem mnControlEmp;
    private javax.swing.JMenu mnDocuments;
    public javax.swing.JMenu mnEmple;
    private javax.swing.JMenu mnHorario;
    public javax.swing.JMenuItem mnNomina;
    private javax.swing.JMenu mnProfile;
    public javax.swing.JMenuItem mnProfileUser;
    private javax.swing.JMenuItem mnRegisterAbsence;
    private javax.swing.JMenuItem mnRegisterWorkingDay;
    private javax.swing.JMenu mnSalary;
    private javax.swing.JMenuBar mnbHome;
    // End of variables declaration//GEN-END:variables
}
