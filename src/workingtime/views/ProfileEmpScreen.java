/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package workingtime.views;

import java.awt.Color;
import java.awt.Font;
import java.awt.HeadlessException;
import java.awt.Image;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import workingtime.database.Conexion;
import workingtime.model.ResetFields;

/**
 * Class ProfileEmpScreen
 * @author Lidia Parral
 * @version 1.0.0
 */
public class ProfileEmpScreen extends javax.swing.JFrame {

    /**
     *
     */
    public ResetFields reset = new ResetFields();

    Conexion conn = new Conexion();
    Connection conect;

    PreparedStatement ps;
    Statement st;

    ResultSet rs;

    String sql;
    String name;
    String surnames;
    String phone;
    String email;

    Object[] options = {"Aceptar", "Cancelar"};
    int election;

    /**
     * Creates new form ProfileEmpScreen
     */
    public ProfileEmpScreen() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.getContentPane().setBackground(Color.WHITE);
        lblNumEmp.setFont(new Font("Century Gothic", Font.BOLD, 14));
        lblNomEmp.setFont(new Font("Century Gothic", Font.BOLD, 14));
        lblApeEmp.setFont(new Font("Century Gothic", Font.BOLD, 14));
        lblDNIEmp.setFont(new Font("Century Gothic", Font.BOLD, 14));
        lblTlfEmp.setFont(new Font("Century Gothic", Font.BOLD, 14));
        lblEmailEmp.setFont(new Font("Century Gothic", Font.BOLD, 14));
        lblDptoEmp.setFont(new Font("Century Gothic", Font.BOLD, 14));
        lblPuestoEmp.setFont(new Font("Century Gothic", Font.BOLD, 14));
        lblCountryEmp.setFont(new Font("Century Gothic", Font.BOLD, 14));
        lblCapitalEmp.setFont(new Font("Century Gothic", Font.BOLD, 14));
        lblDateBirthEmp.setFont(new Font("Century Gothic", Font.BOLD, 14));
        btnUpdateProfile.setFont(new Font("Century Gothic", Font.BOLD, 12));
        btnReturn.setFont(new Font("Century Gothic", Font.PLAIN, 12));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblNumEmp = new javax.swing.JLabel();
        lblApeEmp = new javax.swing.JLabel();
        lblNomEmp = new javax.swing.JLabel();
        lblDNIEmp = new javax.swing.JLabel();
        lblEmailEmp = new javax.swing.JLabel();
        lblTlfEmp = new javax.swing.JLabel();
        lblDptoEmp = new javax.swing.JLabel();
        lblPuestoEmp = new javax.swing.JLabel();
        lblCapitalEmp = new javax.swing.JLabel();
        lblDateBirthEmp = new javax.swing.JLabel();
        lblCountryEmp = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        btnUpdateProfile = new javax.swing.JButton();
        btnReturn = new javax.swing.JButton();
        txtIdEmp = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        txtApellidos = new javax.swing.JTextField();
        txtDNI = new javax.swing.JTextField();
        txtTelefono = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        txtDpto = new javax.swing.JTextField();
        txtPuesto = new javax.swing.JTextField();
        txtPais = new javax.swing.JTextField();
        txtCiudad = new javax.swing.JTextField();
        txtFecha = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setIconImage(getIconImage());
        setUndecorated(true);

        lblNumEmp.setText("Nº. Empleado:");

        lblApeEmp.setText("Apellidos:");

        lblNomEmp.setText("Nombre:");

        lblDNIEmp.setText("DNI:");

        lblEmailEmp.setText("Email:");

        lblTlfEmp.setText("Teléfono:");

        lblDptoEmp.setText("Departamento:");

        lblPuestoEmp.setText("Puesto de Trabajo:");

        lblCapitalEmp.setText("Capital:");

        lblDateBirthEmp.setText("Fecha de Nacimiento:");

        lblCountryEmp.setText("País:");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        btnUpdateProfile.setBackground(new java.awt.Color(38, 70, 166));
        btnUpdateProfile.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdateProfile.setText("ACTUALIZAR");
        btnUpdateProfile.setToolTipText("Este botón permite actualizar los datos del empleado.");
        btnUpdateProfile.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnUpdateProfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateProfileActionPerformed(evt);
            }
        });

        btnReturn.setBackground(new java.awt.Color(204, 204, 204));
        btnReturn.setForeground(new java.awt.Color(255, 255, 255));
        btnReturn.setText("CANCELAR");
        btnReturn.setToolTipText("Este botón permite volver a la página anterior.");
        btnReturn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReturnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(42, Short.MAX_VALUE)
                .addComponent(btnUpdateProfile, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(btnReturn, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdateProfile, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnReturn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        txtIdEmp.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        txtIdEmp.setEnabled(false);
        txtIdEmp.setFocusable(false);

        txtNombre.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N

        txtApellidos.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N

        txtDNI.setAutoscrolls(false);
        txtDNI.setEnabled(false);
        txtDNI.setFocusable(false);

        txtTelefono.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N

        txtEmail.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        txtEmail.setEnabled(false);
        txtEmail.setFocusable(false);

        txtDpto.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        txtDpto.setEnabled(false);
        txtDpto.setFocusable(false);

        txtPuesto.setBackground(new java.awt.Color(242, 242, 242));
        txtPuesto.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        txtPuesto.setEnabled(false);
        txtPuesto.setFocusable(false);

        txtPais.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        txtPais.setEnabled(false);
        txtPais.setFocusable(false);

        txtCiudad.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        txtCiudad.setEnabled(false);
        txtCiudad.setFocusable(false);

        txtFecha.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        txtFecha.setEnabled(false);
        txtFecha.setFocusable(false);

        jLabel11.setBackground(new java.awt.Color(255, 255, 255));
        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/logotipo2.png"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(81, 81, 81)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTlfEmp)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblNumEmp)
                                    .addComponent(lblNomEmp)
                                    .addComponent(lblApeEmp)
                                    .addComponent(lblDNIEmp)
                                    .addComponent(lblEmailEmp))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtIdEmp, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtApellidos, javax.swing.GroupLayout.DEFAULT_SIZE, 217, Short.MAX_VALUE)
                                        .addComponent(txtNombre)
                                        .addComponent(txtTelefono)
                                        .addComponent(txtDNI))
                                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addComponent(jLabel11))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblDateBirthEmp)
                                .addGap(33, 33, 33)
                                .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblDptoEmp)
                                        .addGap(36, 36, 36))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblCountryEmp)
                                            .addComponent(lblPuestoEmp)
                                            .addComponent(lblCapitalEmp))
                                        .addGap(18, 18, 18)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtPais, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtCiudad, javax.swing.GroupLayout.DEFAULT_SIZE, 202, Short.MAX_VALUE)
                                    .addComponent(txtDpto, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtPuesto))))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNumEmp)
                    .addComponent(lblDptoEmp)
                    .addComponent(txtIdEmp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDpto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNomEmp)
                    .addComponent(lblPuestoEmp)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPuesto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblApeEmp)
                    .addComponent(lblCountryEmp)
                    .addComponent(txtApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPais, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDNIEmp)
                    .addComponent(lblCapitalEmp)
                    .addComponent(txtDNI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCiudad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDateBirthEmp)
                    .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTlfEmp)
                    .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEmailEmp)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Botón Actualizar: Este botón permite actualizar los datos personales del
     * empleado.
     *
     * @param evt
     */
    private void btnUpdateProfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateProfileActionPerformed
        election = JOptionPane.showOptionDialog(rootPane, "En realidad desea actualizar los datos del empleado permanentemente", "Mensaje de Confirmacion",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE, null, options, "Aceptar");
        btnUpdateProfile.setBackground(new Color(252, 201, 131));
        if (election == JOptionPane.YES_OPTION) {
            updateProfile();
        } else if (election == JOptionPane.NO_OPTION) {
            JOptionPane.showMessageDialog(null, "No se ha actualizado el empleado de la base de datos", "EMPLEADO", JOptionPane.PLAIN_MESSAGE);
        }
        btnUpdateProfile.setBackground(new Color(38, 70, 166));
    }//GEN-LAST:event_btnUpdateProfileActionPerformed

    /**
     * Botón Cancelar: Este botón permite retornar a la pantalla HomeScreen.
     *
     * @param evt
     */
    private void btnReturnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReturnActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnReturnActionPerformed

    /**
     * Método consult: Este método permite consultar todos los datos personales
     * del empleado de la base de datos.
     */
    public void consult() {
        sql = "SELECT * FROM empleados WHERE IdEmpleado='" + txtIdEmp.getText() + "'";

        try {
            conect = conn.getConexion();
            st = conect.createStatement();
            rs = st.executeQuery(sql);
            if (rs.next()) {
                txtIdEmp.setText(rs.getString("IdEmpleado"));
                txtNombre.setText(rs.getString("Nombre").toUpperCase());
                txtApellidos.setText(rs.getString("Apellidos").toUpperCase());
                txtDNI.setText(rs.getString("DNI").toUpperCase());
                txtTelefono.setText(rs.getString("Telefono"));
                txtEmail.setText(rs.getString("Email"));
                txtDpto.setText(rs.getString("Departamento").toUpperCase());
                txtPuesto.setText(rs.getString("PuestoTrabajo").toUpperCase());
                txtPais.setText(rs.getString("Pais").toUpperCase());
                txtCiudad.setText(rs.getString("Ciudad").toUpperCase());
                txtFecha.setText(rs.getString("FechaNac").toUpperCase());
            } else {
                JOptionPane.showMessageDialog(null, "No existe el empleado en la base de datos.", "EMPLEADO", JOptionPane.PLAIN_MESSAGE);
            }
        } catch (SQLException ex) {
            System.err.println("Error:" + ex);
        }
    }

    /**
     * Método updateProfile: Este método permite actualizar algunos de los datos
     * personales del empleado, en la base de datos.
     */
    public void updateProfile() {
        name = txtNombre.getText();
        surnames = txtApellidos.getText();
        phone = txtTelefono.getText();
        email = txtEmail.getText();

        if (!txtIdEmp.equals("") && !name.isEmpty() && !surnames.isEmpty() && !txtDNI.equals("") && !phone.isEmpty()
                && !email.isEmpty() && !txtDpto.equals("") && !txtPuesto.equals("") && !txtCiudad.equals("") && !txtPais.equals("") && !txtFecha.equals("")) {
            try {
                sql = "UPDATE empleados SET Nombre='" + name + "', Apellidos='" + surnames + "', Telefono='" + phone
                        + "' WHERE IdEmpleado='" + txtIdEmp.getText() + "'";
                conect = conn.getConexion();
                st = conect.createStatement();
                st.executeUpdate(sql);
                JOptionPane.showMessageDialog(null, "El perfil se actualizó correctamente.", "ACTUALIZACIÓN PERFIL", JOptionPane.INFORMATION_MESSAGE);
            } catch (HeadlessException | SQLException ex) {
                System.err.println("Error:" + ex);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Los campos no pueden estar vacíos.", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * Método getIconImage: Este método permite obtener el icono de la
     * aplicación.
     *
     * @return icon
     */
    @Override
    public Image getIconImage() {
        Image retValue = Toolkit.getDefaultToolkit().
                getImage(ClassLoader.getSystemResource("images/logotipo.png"));
        return retValue;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProfileEmpScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new ProfileEmpScreen().setVisible(true);
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnReturn;
    private javax.swing.JButton btnUpdateProfile;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblApeEmp;
    private javax.swing.JLabel lblCapitalEmp;
    private javax.swing.JLabel lblCountryEmp;
    private javax.swing.JLabel lblDNIEmp;
    private javax.swing.JLabel lblDateBirthEmp;
    private javax.swing.JLabel lblDptoEmp;
    private javax.swing.JLabel lblEmailEmp;
    private javax.swing.JLabel lblNomEmp;
    private javax.swing.JLabel lblNumEmp;
    private javax.swing.JLabel lblPuestoEmp;
    private javax.swing.JLabel lblTlfEmp;
    public javax.swing.JTextField txtApellidos;
    public javax.swing.JTextField txtCiudad;
    public javax.swing.JTextField txtDNI;
    public javax.swing.JTextField txtDpto;
    public javax.swing.JTextField txtEmail;
    public javax.swing.JTextField txtFecha;
    public javax.swing.JTextField txtIdEmp;
    public javax.swing.JTextField txtNombre;
    public javax.swing.JTextField txtPais;
    public javax.swing.JTextField txtPuesto;
    public javax.swing.JTextField txtTelefono;
    // End of variables declaration//GEN-END:variables
}
