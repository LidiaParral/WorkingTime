/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package workingtime.views.Document;

import com.mysql.jdbc.Blob;
import java.awt.Color;
import java.awt.Font;
import java.awt.HeadlessException;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.Time;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import workingtime.database.Conexion;
import workingtime.utilities.ResetFields;

/**
 * Class AddDocScreen
 *
 * @author Lidia Parral
 * @version 1.0.0
 */
public class AddDocScreen extends javax.swing.JFrame {

    /**
     *
     */
    public ResetFields reset = new ResetFields();

    Conexion conn = new Conexion();
    Connection conect;

    DefaultTableModel modelo;

    PreparedStatement ps;
    Statement st;

    ResultSet rs;

    String sql;
    String name;
    String date;
    String typeDoc;
    String idEmp;
    String path;

    JFileChooser selected = new JFileChooser();
    byte[] img;

    FileInputStream input;
    FileOutputStream out;
    File file;

    /**
     * Creates new form AddDocScreen
     */
    public AddDocScreen() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.getContentPane().setBackground(Color.WHITE);
        txtPathDoc.setVisible(false);
        lblIdEmp.setVisible(false);
        lblTypeDoc.setFont(new Font("Century Gothic", Font.BOLD, 14));
        lblNamDoc.setFont(new Font("Century Gothic", Font.BOLD, 14));
        lblDateUpdateDoc.setFont(new Font("Century Gothic", Font.BOLD, 14));
        btnSaveDoc.setFont(new Font("Century Gothic", Font.BOLD, 12));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        lblTypeDoc = new javax.swing.JLabel();
        lblNamDoc = new javax.swing.JLabel();
        lblDateUpdateDoc = new javax.swing.JLabel();
        txtNomDoc = new javax.swing.JTextField();
        dtFechaSubDoc = new com.toedter.calendar.JDateChooser();
        cmbTypeDoc = new javax.swing.JComboBox<>();
        btnSaveDoc = new javax.swing.JButton();
        lblIdEmp = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        txtPathDoc = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setIconImage(getIconImage());
        setMinimumSize(new java.awt.Dimension(470, 334));

        jPanel1.setMaximumSize(new java.awt.Dimension(470, 447));
        jPanel1.setMinimumSize(new java.awt.Dimension(470, 447));
        jPanel1.setName(""); // NOI18N

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setMaximumSize(new java.awt.Dimension(470, 289));
        jPanel3.setMinimumSize(new java.awt.Dimension(470, 289));

        lblTypeDoc.setText("Tipo de documento:");

        lblNamDoc.setText("Nombre del documento:");

        lblDateUpdateDoc.setText("Fecha de subida:");

        txtNomDoc.setEditable(false);
        txtNomDoc.setBackground(new java.awt.Color(255, 255, 255));
        txtNomDoc.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N

        dtFechaSubDoc.setBackground(new java.awt.Color(255, 255, 255));
        dtFechaSubDoc.setToolTipText("dd-MM-yyyy");
        dtFechaSubDoc.setDateFormatString("dd-MM-yyyy");
        dtFechaSubDoc.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        dtFechaSubDoc.setMaxSelectableDate(new Date());
        dtFechaSubDoc.setMinSelectableDate(new Date());

        cmbTypeDoc.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        cmbTypeDoc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "PDF", "Excel", "Word" }));

        btnSaveDoc.setBackground(new java.awt.Color(38, 70, 166));
        btnSaveDoc.setForeground(new java.awt.Color(255, 255, 255));
        btnSaveDoc.setText("GUARDAR");
        btnSaveDoc.setToolTipText("Este bot√≥n permite guardar el documento.");
        btnSaveDoc.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnSaveDoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveDocActionPerformed(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/documents.png"))); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(15, 449, Short.MAX_VALUE)
                .addComponent(lblIdEmp)
                .addGap(21, 21, 21))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSaveDoc, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblDateUpdateDoc)
                            .addComponent(txtNomDoc, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblNamDoc)
                            .addComponent(lblTypeDoc)
                            .addComponent(cmbTypeDoc, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dtFechaSubDoc, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(46, 46, 46))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblIdEmp)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addComponent(lblTypeDoc)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmbTypeDoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(20, 20, 20)
                        .addComponent(lblNamDoc)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNomDoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblDateUpdateDoc)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dtFechaSubDoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(btnSaveDoc, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(52, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        txtPathDoc.setEnabled(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(txtPathDoc, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(txtPathDoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 303, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Bot√≥n Guadar: Este bot√≥n permite guardar el documento a√±adido.
     *
     * @param evt
     */
    private void btnSaveDocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveDocActionPerformed
        btnSaveDoc.setBackground(new Color(252, 201, 131));
        if (selected.showDialog(this, "GUARDAR ARCHIVO") == JFileChooser.APPROVE_OPTION) {
            file = selected.getSelectedFile();
            if (file.canRead()) {
                try {
                    if (file.getName().endsWith(".pdf") || file.getName().endsWith(".odt") || file.getName().endsWith(".doc") || file.getName().endsWith(".docx")
                            || file.getName().endsWith(".xlsx") || file.getName().endsWith(".xls")) {
                        txtPathDoc.setText(file.getAbsolutePath());
                        txtNomDoc.setText(file.getName());

                        saveDocument(file);
                    } else {
                        JOptionPane.showMessageDialog(null, "No puede abrir un archivo con esa extensi√≥n.\nS√≥lo permite las siguientes extensiones:\n"
                                + ".pdf,.odt,.doc,.docx,.xls,.xlsx", "DOCUMENTOS", JOptionPane.ERROR_MESSAGE);
                    }

                } catch (FileNotFoundException ex) {
                    Logger.getLogger(AddDocScreen.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

        }

        btnSaveDoc.setBackground(new Color(38, 70, 166));
    }//GEN-LAST:event_btnSaveDocActionPerformed

    /**
     * M√©todo saveDocument: Este m√©todo permite guardar un documento en la base
     * de datos.
     *
     * @param fileSave
     * @throws java.io.FileNotFoundException
     */
    public void saveDocument(File fileSave) throws FileNotFoundException {
        idEmp = lblIdEmp.getText();
        name = txtNomDoc.getText();
        path = txtPathDoc.getText();
        date = new SimpleDateFormat("dd-MM-yyyy").format(dtFechaSubDoc.getDate());

        
        InputStream ip = new FileInputStream(fileSave);
        try {
            typeDocuments();
            if (name.equals("") || date.equals("")) {
                JOptionPane.showMessageDialog(null, "Los campos no pueden estar vac√≠os.", "Validaci√≥n campos", JOptionPane.ERROR_MESSAGE);
            } else {
                sql = "INSERT INTO documentos_empleados(IdEmpleado,TipoDocumento,NombreDoc,FechaSubida,Archivo) VALUES "
                        + "(?,?,?,?,?)";

                conect = conn.getConexion();
                ps = conect.prepareStatement(sql);
                ps.setInt(1, Integer.parseInt(lblIdEmp.getText()));
                ps.setString(2, typeDoc);
                ps.setString(3, name);
                ps.setDate(4, new java.sql.Date(dtFechaSubDoc.getDate().getTime()));
                ps.setBlob(5, ip, (int) path.length());

                ps.executeUpdate();

                JOptionPane.showMessageDialog(null, "Registro con √©xito", "DOCUMENTOS", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (HeadlessException | SQLException ex) {
            System.err.println("Error:" + ex);
            JOptionPane.showMessageDialog(null, "Error interno en el sistema.", "ERROR", JOptionPane.ERROR_MESSAGE);
        }

    }

    /**
     * M√©todo typeRequest: Este m√©todo permite a√±adir el valor del tipo de
     * documento en la base de datos, seg√∫n se seleccione en el campo del
     * comboBox.
     */
    void typeDocuments() {
        switch (cmbTypeDoc.getSelectedIndex()) {
            case 0:
                typeDoc = "PDF";
                break;
            case 1:
                typeDoc = "EXCEL";
                break;
            case 2:
                typeDoc = "WORD";
                break;
            default:
                throw new AssertionError();
        }

    }

    /**
     * M√©todo getIconImage: Este m√©todo permite obtener el icono de la
     * aplicaci√≥n.
     *
     * @return icon
     */
    @Override
    public Image getIconImage() {
        Image retValue = Toolkit.getDefaultToolkit().
                getImage(ClassLoader.getSystemResource("images/logotipo.png"));
        return retValue;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddDocScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddDocScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddDocScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddDocScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new AddDocScreen().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton btnSaveDoc;
    public javax.swing.JComboBox<String> cmbTypeDoc;
    public com.toedter.calendar.JDateChooser dtFechaSubDoc;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel lblDateUpdateDoc;
    public javax.swing.JLabel lblIdEmp;
    private javax.swing.JLabel lblNamDoc;
    private javax.swing.JLabel lblTypeDoc;
    public javax.swing.JTextField txtNomDoc;
    public javax.swing.JTextField txtPathDoc;
    // End of variables declaration//GEN-END:variables

    void saveDocument() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
}
